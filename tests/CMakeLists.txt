#Testing script for Elegant86

cmake_minimum_required(VERSION 3.1.0)

project(Test VERSION 1.0.0 LANGUAGES CXX)

set(CMAKE_INCLUDE_CURRENT_DIR ON)
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

if ("${CMAKE_CXX_COMPILER_ID}" MATCHES "GNU")
    execute_process(
        COMMAND ${CMAKE_CXX_COMPILER} -dumpversion OUTPUT_VARIABLE GCC_VERSION)
    if (NOT (GCC_VERSION VERSION_GREATER 10 OR GCC_VERSION VERSION_EQUAL 10))
        message(FATAL_ERROR "${PROJECT_NAME} requires g++ 10 or greater.")
    endif ()
elseif ("${CMAKE_CXX_COMPILER_ID}" MATCHES "Clang")
    execute_process(
        COMMAND ${CMAKE_CXX_COMPILER} -dumpversion OUTPUT_VARIABLE CLANG_VERSION)
    if (NOT (CLANG_VERSION VERSION_GREATER 10 OR CLANG_VERSION VERSION_EQUAL 10))
        message(FATAL_ERROR "${PROJECT_NAME} requires clang 10 or greater.")
    endif ()
else ()
    message(FATAL_ERROR "Your C++ compiler does not support C++20.")
endif ()

set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)
set(CMAKE_AUTOUIC ON)

include_directories("../" )
include_directories("../include" )

file(GLOB project_files
    "*.hpp"
    "*.cpp"
    "../*.h"
    "../source/*.cpp"
    "../include/*.h"
    "../codeEditor/source/*.cpp"
    "../codeEditor/include/*.h"
    "../assembler/source/*.cpp"
    "../assembler/include/*.h"
    "../assembler/fpasm/*.cpp"
    "../assembler/fpasm/*.h"
    "../mainwindow.cpp"
    )

find_package(GTest REQUIRED)
find_package(Qt5 COMPONENTS Widgets REQUIRED)
find_package(Qt5 COMPONENTS Script REQUIRED)

add_executable(Test ${project_files})
gtest_discover_tests(Test)

set_property(TARGET Test PROPERTY CXX_STANDARD 20)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

target_link_libraries(Test Qt5::Widgets Qt5::Script gtest gtest_main pthread)
